{"version":3,"sources":["components/Home.js","components/Error.js","starWars/Nav.js","starWars/Vehicle.js","App.js","reportWebVitals.js","index.js"],"names":["Home","Error","Nav","props","state","vehicles","fetch","then","response","json","setState","results","console","log","this","map","vehicle","index","id","url","split","activeStyle","fontWeight","to","name","Component","Vehicle","match","params","vehicleId","savedVehicle","localStorage","getItem","JSON","parse","setItem","stringify","prevProps","prevState","model","manufacturer","App","className","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8OAQeA,EANF,WACT,OACI,4CCIOC,EAND,WACV,OACI,oDCsCOC,E,kDApCb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,SAAU,IAJK,E,gEAQE,IAAD,OAElBC,MAAM,mCACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKC,SAAS,CAAEL,SAAUI,EAAKE,aAE7CC,QAAQC,IAAIC,KAAKV,MAAMC,Y,+BAIzB,OACE,6BACGS,KAAKV,MAAMC,SAASU,KAAI,SAACC,EAASC,GAEjC,IAAMC,EAAKF,EAAQG,IAAIC,MAAM,KAAK,GAClC,OACE,6BACE,cAAC,IAAD,CAASC,YAAa,CAACC,WAAY,QAASC,GAAE,mBAAcL,GAA5D,SACGF,EAAQQ,QAFJP,Y,GAzBHQ,aC8DHC,E,kDAhEb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXY,QAAS,IAJM,E,gEAQE,IAAD,OACZE,EAAKJ,KAAKX,MAAMwB,MAAMC,OAAOC,UAC7BC,EAAeC,aAAaC,QAAb,kBAAgCd,IAEjDY,EACFhB,KAAKJ,SAAS,CACZM,QAASiB,KAAKC,MAAMJ,KAKxBxB,MAAM,kCAAD,OAAmCY,EAAnC,MACFX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CAAEM,QAASP,IACzBsB,aAAaI,QAAb,kBAAgCjB,GAAMe,KAAKG,UAAU3B,S,yCAIxC4B,EAAWC,GAAY,IAAD,OAIvC,GAHwBL,KAAKG,UAAUC,EAAUV,MAAMC,OAAOC,aACnCI,KAAKG,UAAUtB,KAAKX,MAAMwB,MAAMC,OAAOC,WAEtB,CAC1C,IAAMX,EAAKJ,KAAKX,MAAMwB,MAAMC,OAAOC,UAC7BC,EAAeC,aAAaC,QAAb,kBAAgCd,IAErD,GAAIY,EAIF,YAHAhB,KAAKJ,SAAS,CACZM,QAASiB,KAAKC,MAAMJ,KAKxBxB,MAAM,kCAAD,OAAmCY,EAAnC,MACFX,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GACJ,EAAKC,SAAS,CAAEM,QAASP,IACzBsB,aAAaI,QAAb,kBAAgCjB,GAAMe,KAAKG,UAAU3B,U,+BAKnD,IACAO,EAAYF,KAAKV,MAAjBY,QACR,OACE,qCACA,wCAAWA,EAAQQ,QACnB,wCAAWR,EAAQuB,SACnB,+CAAkBvB,EAAQwB,gBAC1B,sCAASxB,EAAQG,c,GA3DDM,aCsCPgB,E,uKAxBX,OACE,sBAAKC,UAAU,MAAf,UACE,6DACA,eAAC,IAAD,WACE,6BACE,6BAAI,cAAC,IAAD,CAAMnB,GAAG,IAAT,sBAEN,uBACA,cAAC,EAAD,IACA,uBAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,IAAIC,UAAW7C,IAEjC,cAAC,IAAD,CAAO4C,KAAK,sBAAsBC,UAAWnB,IAE7C,cAAC,IAAD,CAAOmB,UAAW5C,iB,GAlBZwB,aCFHqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBzC,MAAK,YAAkD,IAA/C0C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6bf7315a.chunk.js","sourcesContent":["import React from 'react'\n\nconst Home = () => {\n    return (\n        <h2>Home page</h2>\n    )\n}\n\nexport default Home","import React from 'react'\n\nconst Error = () => {\n    return (\n        <h2>Error! Try again.</h2>\n    )\n}\n\nexport default Error","import React, { Component } from 'react';\nimport {\n  NavLink\n} from 'react-router-dom';\n\nclass Nav extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      vehicles: []\n    }\n  }\n\n  componentDidMount() {\n    // Fetch list of vehicles from SWAPI.co\n    fetch(`https://swapi.dev/api/vehicles/`)\n      .then(response => response.json())\n      .then(json => this.setState({ vehicles: json.results }))\n\n      console.log(this.state.vehicles);\n  }\n\n  render() {\n    return (\n      <ul>\n        {this.state.vehicles.map((vehicle, index) => {\n          // vehicle.url: https://swapi.co/api/vehicles/4/\n          const id = vehicle.url.split('/')[5]\n          return (\n            <li key={index}>\n              <NavLink activeStyle={{fontWeight: 'bold'}} to={`/vehicle/${id}`}>\n                {vehicle.name}\n              </NavLink>\n            </li>\n          )\n        })}\n      </ul>\n    );\n  }\n}\n\nexport default Nav;\n","import React, { Component } from 'react'\n\nclass Vehicle extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      vehicle: {}\n    }\n  }\n\n  componentDidMount() {\n    const id = this.props.match.params.vehicleId\n    const savedVehicle = localStorage.getItem(`vehicle-${id}`)\n\n    if (savedVehicle) {\n      this.setState({\n        vehicle: JSON.parse(savedVehicle)\n      })\n      return\n    }\n\n    fetch(`https://swapi.dev/api/vehicles/${id}/`)\n      .then(response => response.json())\n      .then(json => {\n        this.setState({ vehicle: json })\n        localStorage.setItem(`vehicle-${id}`, JSON.stringify(json))\n      })\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const prevPropsString = JSON.stringify(prevProps.match.params.vehicleId)\n    const updatedPropsString = JSON.stringify(this.props.match.params.vehicleId)\n\n    if (prevPropsString !== updatedPropsString) {\n      const id = this.props.match.params.vehicleId\n      const savedVehicle = localStorage.getItem(`vehicle-${id}`)\n\n      if (savedVehicle) {\n        this.setState({\n          vehicle: JSON.parse(savedVehicle)\n        })\n        return\n      }\n\n      fetch(`https://swapi.dev/api/vehicles/${id}/`)\n        .then(response => response.json())\n        .then(json => {\n          this.setState({ vehicle: json })\n          localStorage.setItem(`vehicle-${id}`, JSON.stringify(json))\n        })\n    }\n  }\n\n  render() {\n    const { vehicle } = this.state\n    return (\n      <>\n      <h3>Name: {vehicle.name}</h3>\n      <p>Model: {vehicle.model}</p>\n      <p>Manufacturer: {vehicle.manufacturer}</p>\n      <p>URL: {vehicle.url}</p>\n      </>\n    )\n  }\n}\n\nexport default Vehicle\n","import React, { Component } from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Link,\n  Switch\n} from 'react-router-dom';\n// import './Default.css';\n\nimport Home from './components/Home'\nimport Error from './components/Error'\nimport Nav from './starWars/Nav'\nimport Vehicle from './starWars/Vehicle'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Awesome Star Wars Vehicles!</h1>\n        <Router>\n          <ul>\n            <li><Link to=\"/\">Home</Link></li>\n          </ul>\n          <hr />\n          <Nav />\n          <hr />\n\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n\n            <Route path=\"/vehicle/:vehicleId\" component={Vehicle} />\n\n            <Route component={Error} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}